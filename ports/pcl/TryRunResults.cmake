# This file was generated by CMake because it detected TRY_RUN() commands
# in crosscompiling mode. It will be overwritten by the next CMake run.
# Copy it to a safe location, set the variables to appropriate values
# and use it then to preset the CMake cache (using -C).


# HAVE_MM_MALLOC_EXITCODE
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set HAVE_MM_MALLOC_EXITCODE to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# HAVE_MM_MALLOC_EXITCODE__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set HAVE_MM_MALLOC_EXITCODE__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The HAVE_MM_MALLOC_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /Users/patrickabadi/vcpkg/buildtrees/pcl/arm64-ios-dbg/CMakeFiles/CMakeTmp/src.cxx
# Executable    : /Users/patrickabadi/vcpkg/buildtrees/pcl/arm64-ios-dbg/CMakeFiles/cmTC_a6df4-HAVE_MM_MALLOC_EXITCODE
# Run arguments : 
#    Called from: [3]	/Users/patrickabadi/vcpkg/downloads/tools/cmake-3.18.4-osx/cmake-3.18.4-Darwin-x86_64/CMake.app/Contents/share/cmake-3.18/Modules/CheckCXXSourceRuns.cmake
#                 [2]	/Users/patrickabadi/vcpkg/buildtrees/pcl/src/ade837d55c-34e4d7a2fa.clean/cmake/pcl_find_sse.cmake
#                 [1]	/Users/patrickabadi/vcpkg/buildtrees/pcl/src/ade837d55c-34e4d7a2fa.clean/CMakeLists.txt

set( HAVE_MM_MALLOC_EXITCODE 
     0
     CACHE STRING "Result from TRY_RUN" FORCE)

set( HAVE_MM_MALLOC_EXITCODE__TRYRUN_OUTPUT 
     0
     CACHE STRING "Output from TRY_RUN" FORCE)


# HAVE_POSIX_MEMALIGN_EXITCODE
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set HAVE_POSIX_MEMALIGN_EXITCODE to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# HAVE_POSIX_MEMALIGN_EXITCODE__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set HAVE_POSIX_MEMALIGN_EXITCODE__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The HAVE_POSIX_MEMALIGN_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /Users/patrickabadi/vcpkg/buildtrees/pcl/arm64-ios-dbg/CMakeFiles/CMakeTmp/src.cxx
# Executable    : /Users/patrickabadi/vcpkg/buildtrees/pcl/arm64-ios-dbg/CMakeFiles/cmTC_4f942-HAVE_POSIX_MEMALIGN_EXITCODE
# Run arguments : 
#    Called from: [3]	/Users/patrickabadi/vcpkg/downloads/tools/cmake-3.18.4-osx/cmake-3.18.4-Darwin-x86_64/CMake.app/Contents/share/cmake-3.18/Modules/CheckCXXSourceRuns.cmake
#                 [2]	/Users/patrickabadi/vcpkg/buildtrees/pcl/src/ade837d55c-34e4d7a2fa.clean/cmake/pcl_find_sse.cmake
#                 [1]	/Users/patrickabadi/vcpkg/buildtrees/pcl/src/ade837d55c-34e4d7a2fa.clean/CMakeLists.txt

set( HAVE_POSIX_MEMALIGN_EXITCODE 
     0
     CACHE STRING "Result from TRY_RUN" FORCE)

set( HAVE_POSIX_MEMALIGN_EXITCODE__TRYRUN_OUTPUT 
     0
     CACHE STRING "Output from TRY_RUN" FORCE)

